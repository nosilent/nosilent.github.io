{"version":3,"sources":["components/body.jsx","components/nav.jsx","App.js","index.js"],"names":["Body","contentNodes","createRef","title","state","content","url","this","props","match","params","getData","axios","get","then","res","setState","marked","data","renderer","render_mark","current","scrollTo","top","hight","querySelectorAll","forEach","item","parent","parentNode","classList","add","Object","assign","style","prism","highlightElement","Renderer","heading","text","level","raw","slugger","anchor","slug","table","header","body","tablecell","flags","type","className","dangerouslySetInnerHTML","__html","ref","React","Component","Nav","list","map","index","Item","key","to","split","selectable","navData","tabBarGutter","tabBarStyle","borderBottom","children","temp","overlay","getMenu","trigger","TabPane","tab","forceRender","App","config","window","location","pathname","slice","history","push","keys","length","getContent","path","component","withRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff782488.chunk.js","sourcesContent":["import React,{createRef} from 'react'\r\nimport axios from 'axios'\r\nimport marked from 'marked'\r\nimport prism from 'prismjs'\r\n\r\nclass Body extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.contentNodes = createRef()\r\n    this.title = ''\r\n    this.state={\r\n      content: '',\r\n      url: ''\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    let url = this.props.match.params.url\r\n    this.getData(url)\r\n  }\r\n  componentDidUpdate(){\r\n    let url = this.props.match.params.url\r\n    this.getData(url)\r\n  }\r\n  // 获取数据\r\n  getData(url){\r\n    if(url===this.state.url) return\r\n    axios.get(`/docs/${url}.md`).then(res=>{\r\n      this.title = ''\r\n      this.setState({\r\n        url,\r\n        content: marked(res.data,{\r\n          renderer: this.render_mark()\r\n        })\r\n      })\r\n      this.contentNodes.current.scrollTo({\r\n        top: 0,\r\n      })\r\n      this.hight()\r\n    })\r\n  }\r\n  // 代码高亮\r\n  hight(){\r\n    let highlight_Element = this.contentNodes.current.querySelectorAll(\"pre code\")\r\n        //代码高亮处理\r\n      highlight_Element.forEach(item => {\r\n        let parent = item.parentNode\r\n        parent.classList.add('line-numbers')\r\n        Object.assign(parent.style,{\r\n          \"white-space\":\"pre-wrap\"\r\n        })\r\n      prism.highlightElement(item)\r\n    })\r\n  }\r\n  render_mark(){\r\n    let renderer = new marked.Renderer()\r\n    renderer.heading =(text, level, raw, slugger)=>{\r\n      let anchor = slugger.slug(`${text}_${level}`)\r\n      //添加目录内容\r\n      if (level <= 3) {\r\n        if (level === 3) {\r\n          this.title +=`<a href=\"${this.props.match.params.url}#${anchor}\" class='h3'>${text}</>`\r\n        } else{\r\n          this.title +=`<a href=\"${this.props.match.params.url}#${anchor}\" class='h2'>${text}</>`\r\n        }\r\n      }\r\n      return `\r\n            <h${level} id=\"${anchor}\">\r\n            ${text}\r\n            </h${level}>`;\r\n    }\r\n    renderer.table = function (header, body) {\r\n      if (body) body = '<tbody>' + body + '</tbody>';\r\n      return `<div class=\"table-responsive\"><table class=\"table table-striped table-sm\">\\n` +\r\n        '<thead class=\"text-center\">\\n' +\r\n        header +\r\n        '</thead>\\n' +\r\n        body +\r\n        '</table></div>';\r\n    }\r\n    renderer.tablecell = function (content, flags) {\r\n      var type = flags.header ? 'th' : 'td';\r\n      var tag;\r\n      if (type === 'th') {\r\n        tag = `<${type} scope=\"col\">`;\r\n      } else {\r\n        tag = `<${type} >`\r\n      }\r\n      return tag + content + '</' + type + '>\\n';\r\n    }\r\n    return renderer\r\n  }\r\n  render(){\r\n    return (\r\n      <>\r\n        {\r\n          this.state.content\r\n          && \r\n            <div className='body'>\r\n            {/* 标题列表 */}\r\n            <div className='sider'>\r\n              <div>目录</div>\r\n              <div dangerouslySetInnerHTML={{__html:this.title}}></div>\r\n            </div>\r\n            {/* 具体展示内容 */}\r\n            <div className='Content' dangerouslySetInnerHTML={{__html:this.state.content}} ref={this.contentNodes}/>\r\n          </div>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Body","import React,{Component} from 'react'\r\nimport { Menu, Dropdown, Icon, Tabs } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nclass Nav extends Component {\r\n  getMenu(data) {\r\n    let list =  data.map((item,index)=>{\r\n       return <Menu.Item key={index}><Link to={`${item.url.split('/')[1]}`}>{item.text}</Link></Menu.Item>\r\n     })\r\n     return (<Menu selectable={false}>{ list }</Menu>)\r\n  }\r\n  render(){\r\n    const {navData} = this.props\r\n    return (\r\n      <>\r\n      <span className='blog_name'>个人主页</span>\r\n      <Tabs tabBarGutter={0}  tabBarStyle={{borderBottom: 'none'}}>\r\n        {\r\n         navData.map(item=>{\r\n           if(item.children){\r\n            let temp =(\r\n              <Dropdown overlay={this.getMenu(item.children)}  trigger={['hover','click']}>\r\n                <span>{item.text} <Icon type=\"down\"/></span>\r\n              </Dropdown>)\r\n            return (<Tabs.TabPane tab={temp} key={item.text} forceRender={true} />)\r\n           }else{\r\n            let temp = (<Link to={`${item.url.split('/')[1]}`}  key={item.text} >{item.text}</Link>)\r\n            return (<Tabs.TabPane tab={temp} key={item.text} forceRender={false}/>)\r\n           }\r\n         })\r\n        }\r\n      </Tabs>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Nav","import React from 'react'\nimport './css/index.css'\nimport './css/table.css'\nimport Body from './components/body'\nimport Nav from './components/nav'\nimport axios from 'axios'\nimport { Route,withRouter } from 'react-router-dom'\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      config: {},\n    }\n  }\n  componentDidMount(){\n    axios.get('/config.json').then(res=>{\n      this.setState({\n        config: res.data,\n      })\n    }).then(res=>{\n      if(window.location.pathname.slice(1)===''){\n        this.props.history.push(`/${this.state.config.index}`)\n      }\n    })\n    \n  }\n  render(){\n    return (\n      <div className='my_box'>\n        {/* 顶部导航 */}\n        <div className='nav'>\n        {Object.keys(this.state.config).length>0 && <Nav navData={this.state.config.navData} getContent={this.getContent}/>}\n        </div>\n        {/* 内容部分 */}\n        <Route path='/:url' component={Body}/>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n, document.getElementById('root'));\n\n\n"],"sourceRoot":""}